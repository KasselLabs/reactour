{"version":3,"file":"tour.cjs.production.min.js","sources":["../src/hooks.tsx","../src/styles.tsx","../src/Badge.tsx","../src/Navigation.tsx","../src/Content.tsx","../src/Close.tsx","../src/Keyboard.tsx","../src/Tour.tsx","../src/Context.tsx","../src/usePrevious.tsx","../src/withTour.tsx"],"sourcesContent":["import { useEffect, useCallback, useState } from 'react'\nimport { inView, smoothScroll, getWindow, getRect } from '@reactour/utils'\nimport { StepType } from './types'\n\nlet initialState = {\n  bottom: 0,\n  height: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  width: 0,\n  windowWidth: 0,\n  windowHeight: 0,\n}\n\nexport function useSizes(\n  step: StepType,\n  scrollOptions: ScrollIntoViewOptions & { inViewThreshold?: number } = {\n    block: 'center',\n    behavior: 'smooth',\n    inViewThreshold: 0,\n  }\n) {\n  const [transition, setTransition] = useState(false)\n  const [observing, setObserving] = useState(false)\n  const [refresher, setRefresher] = useState(null as any)\n  const [dimensions, setdDimensions] = useState(initialState)\n  const target = document.querySelector(step?.selector)\n\n  const handleResize = useCallback(() => {\n    // if (!target && !step?.highlightedSelectors) return\n    setdDimensions(\n      getHighlightedRect(target, step?.highlightedSelectors, step?.bypassElem)\n    )\n  }, [target, step?.highlightedSelectors])\n\n  useEffect(() => {\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [target, step?.highlightedSelectors, refresher])\n\n  useEffect(() => {\n    const isInView = inView({\n      ...dimensions,\n      threshold: scrollOptions.inViewThreshold,\n    })\n    // TODO: - Solve cases when target elemente exceeds viewport\n    // TODO: - Solve cases when no target but highlightedSelectors\n    if (!isInView && target) {\n      setTransition(true)\n      smoothScroll(target, scrollOptions)\n        .then(() => {\n          if (!observing) setRefresher(Date.now())\n        })\n        .finally(() => {\n          setTransition(false)\n        })\n    }\n  }, [dimensions])\n\n  function observableRefresher() {\n    setObserving(true)\n    setdDimensions(\n      getHighlightedRect(target, step?.highlightedSelectors, step?.bypassElem)\n    )\n    setObserving(false)\n  }\n\n  return { sizes: dimensions, transition, target, observableRefresher }\n}\n\nfunction getHighlightedRect(\n  node: Element | null,\n  highlightedSelectors: string[] = [],\n  bypassElem = true\n) {\n  const { w: windowWidth, h: windowHeight } = getWindow()\n  if (!highlightedSelectors) {\n    return {\n      ...getRect(node),\n      windowWidth,\n      windowHeight,\n    }\n  }\n\n  let attrs = getRect(node)\n  let altAttrs = {\n    bottom: 0,\n    height: 0,\n    left: windowWidth,\n    right: 0,\n    top: windowHeight,\n    width: 0,\n  }\n\n  for (const selector of highlightedSelectors) {\n    const element = document.querySelector(selector) as HTMLElement\n    if (\n      !element ||\n      element.style.display === 'none' ||\n      element.style.visibility === 'hidden'\n    ) {\n      continue\n    }\n\n    const rect = getRect(element)\n\n    if (bypassElem || !node) {\n      if (rect.top < altAttrs.top) {\n        altAttrs.top = rect.top\n      }\n\n      if (rect.right > altAttrs.right) {\n        altAttrs.right = rect.right\n      }\n\n      if (rect.bottom > altAttrs.bottom) {\n        altAttrs.bottom = rect.bottom\n      }\n\n      if (rect.left < altAttrs.left) {\n        altAttrs.left = rect.left\n      }\n\n      altAttrs.width = altAttrs.right - altAttrs.left\n      altAttrs.height = altAttrs.bottom - altAttrs.top\n    } else {\n      if (rect.top < attrs.top) {\n        attrs.top = rect.top\n      }\n\n      if (rect.right > attrs.right) {\n        attrs.right = rect.right\n      }\n\n      if (rect.bottom > attrs.bottom) {\n        attrs.bottom = rect.bottom\n      }\n\n      if (rect.left < attrs.left) {\n        attrs.left = rect.left\n      }\n\n      attrs.width = attrs.right - attrs.left\n      attrs.height = attrs.bottom - attrs.top\n    }\n  }\n\n  const bypassable =\n    bypassElem || !node ? altAttrs.width > 0 && altAttrs.height > 0 : false\n\n  return {\n    left: (bypassable ? altAttrs : attrs).left,\n    top: (bypassable ? altAttrs : attrs).top,\n    right: (bypassable ? altAttrs : attrs).right,\n    bottom: (bypassable ? altAttrs : attrs).bottom,\n    width: (bypassable ? altAttrs : attrs).width,\n    height: (bypassable ? altAttrs : attrs).height,\n    windowWidth,\n    windowHeight,\n  }\n}\n","export type StylesKeys =\n  | 'badge'\n  | 'controls'\n  | 'navigation'\n  | 'button'\n  | 'arrow'\n  | 'dot'\n  | 'close'\n\nexport type StylesObj = {\n  [key in StylesKeys]?: StyleFn\n}\n\nexport type StyleFn = (\n  props: { [key: string]: any },\n  state?: { [key: string]: any }\n) => React.CSSProperties\n\nexport type Styles = {\n  badge: StyleFn\n  controls: StyleFn\n  navigation: StyleFn\n  button: StyleFn\n  arrow: StyleFn\n  dot: StyleFn\n  close: StyleFn\n}\n\nexport type StyleKey = keyof Styles\n\nexport const defaultStyles: Styles = {\n  badge: () => ({\n    position: 'absolute',\n    fontFamily: 'monospace',\n    background: 'var(--reactour-accent,#007aff)',\n    height: '1.875em',\n    lineHeight: 2,\n    paddingLeft: '0.8125em',\n    paddingRight: '0.8125em',\n    fontSize: '1em',\n    borderRadius: '1.625em',\n    color: 'white',\n    textAlign: 'center',\n    boxShadow: '0 0.25em 0.5em rgba(0, 0, 0, 0.3)',\n    top: '-0.8125em',\n    left: '-0.8125em',\n  }),\n  controls: () => ({\n    display: 'flex',\n    marginTop: 24,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  }),\n  navigation: () => ({\n    counterReset: 'dot',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  }),\n  button: ({ disabled }) => ({\n    display: 'block',\n    padding: 0,\n    border: 0,\n    background: 'none',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n  }),\n  arrow: ({ disabled }) => ({\n    color: disabled ? '#caccce' : '#646464',\n    width: 16,\n    height: 12,\n    flex: '0 0 16px',\n    '&:hover': {\n      color: disabled ? '#caccce' : '#000',\n    },\n  }),\n  dot: ({ current, disabled, showNumber }) => ({\n    counterIncrement: 'dot',\n    width: 8,\n    height: 8,\n    border: current ? '0' : '1px solid #caccce',\n    borderRadius: '100%',\n    padding: 0,\n    display: 'block',\n    margin: 4,\n    transition: 'opacity 0.3s, transform 0.3s',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    transform: `scale(${current ? 1.25 : 1})`,\n    color: current ? 'var(--reactour-accent, #007aff)' : '#caccce',\n    background: current ? 'var(--reactour-accent, #007aff)' : 'none',\n    '&:before': {\n      content: 'counter(dot)',\n      position: 'absolute',\n      bottom: 'calc(100% + 0.25em)',\n      left: '50%',\n      opacity: 0,\n      transform: 'translate(-50%, 1em)',\n      transition: '0.3s',\n      display: showNumber ? 'block' : 'none',\n    },\n    '&:hover': {\n      backgroundColor: 'currentColor',\n      '&:before': {\n        opacity: 0.5,\n        transform: 'translate(-50%, -2px)',\n      },\n    },\n  }),\n  close: ({ disabled }) => ({\n    position: 'absolute',\n    top: 22,\n    right: 22,\n    width: 9,\n    height: 9,\n    color: disabled ? '#caccce' : '#5e5e5e',\n    '&:hover': {\n      color: disabled ? '#caccce' : '#000',\n    },\n  }),\n}\n\nexport type getStylesType = (key: StylesKeys, extra?: any) => {}\n\nexport function stylesMatcher(styles: StylesObj) {\n  return (key: StyleKey, state: {}): {} => {\n    const base = defaultStyles[key](state)\n    const custom = styles[key]\n    return custom ? custom(base, state) : base\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react'\nimport React from 'react'\nimport { StylesObj, stylesMatcher } from './styles'\n\nconst Badge: React.FC<BadgeProps> = ({ styles = {}, children }) => {\n  const getStyles = stylesMatcher(styles)\n  return <span css={getStyles('badge', {})}>{children}</span>\n}\n\nexport type BadgeProps = {\n  styles?: StylesObj\n}\n\nexport default Badge\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react'\nimport React, { Dispatch } from 'react'\nimport { StylesObj, stylesMatcher } from './styles'\nimport { StepType, BtnFnProps, NavButtonProps } from './types'\n\nconst Navigation: React.FC<NavigationProps> = ({\n  styles = {},\n  steps,\n  setCurrentStep,\n  currentStep,\n  setIsOpen,\n  nextButton,\n  prevButton,\n  disableDots,\n  hideButtons,\n  disableAll,\n  rtl,\n}) => {\n  const stepsLength = steps.length\n  const getStyles = stylesMatcher(styles)\n\n  const Button: React.FC<NavButtonProps> = ({\n    onClick,\n    kind = 'next',\n    children,\n    hideArrow,\n  }) => {\n    function clickHandler() {\n      if (!disableAll) {\n        if (onClick && typeof onClick === 'function') {\n          onClick()\n        } else {\n          if (kind === 'next') {\n            setCurrentStep(Math.min(currentStep + 1, stepsLength - 1))\n          } else {\n            setCurrentStep(Math.max(currentStep - 1, 0))\n          }\n        }\n      }\n    }\n\n    return (\n      <button\n        css={getStyles('button', {\n          kind,\n          disabled: disableAll\n            ? disableAll\n            : kind === 'next'\n            ? stepsLength - 1 === currentStep\n            : currentStep === 0,\n        })}\n        onClick={clickHandler}\n        aria-label={`Go to ${kind} step`}\n      >\n        {!hideArrow ? (\n          <Arrow\n            styles={styles}\n            inverted={rtl ? kind === 'prev' : kind === 'next'}\n            disabled={\n              disableAll\n                ? disableAll\n                : kind === 'next'\n                ? stepsLength - 1 === currentStep\n                : currentStep === 0\n            }\n          />\n        ) : null}\n        {children}\n      </button>\n    )\n  }\n\n  return (\n    <div css={getStyles('controls', {})} dir={rtl ? 'rtl' : 'ltr'}>\n      {!hideButtons ? (\n        prevButton && typeof prevButton === 'function' ? (\n          prevButton({\n            Button,\n            setCurrentStep,\n            currentStep,\n            stepsLength,\n            setIsOpen,\n          })\n        ) : (\n          <Button kind=\"prev\" />\n        )\n      ) : null}\n      <div css={getStyles('navigation', {})}>\n        {Array.from({ length: stepsLength }, (_, i) => i).map(index => {\n          return (\n            <button\n              css={getStyles('dot', {\n                current: index === currentStep,\n                disabled: disableDots || disableAll,\n              })}\n              onClick={() => {\n                if (!disableDots && !disableAll) setCurrentStep(index)\n              }}\n              key={`navigation_dot_${index}`}\n              aria-label={\n                steps[index]?.navDotAriaLabel || `Go to step ${index + 1}`\n              }\n            />\n          )\n        })}\n      </div>\n      {!hideButtons ? (\n        nextButton && typeof nextButton === 'function' ? (\n          nextButton({\n            Button,\n            setCurrentStep,\n            currentStep,\n            stepsLength,\n            setIsOpen,\n          })\n        ) : (\n          <Button />\n        )\n      ) : null}\n    </div>\n  )\n}\n\ntype BaseProps = {\n  styles?: StylesObj\n}\n\ntype NavigationProps = BaseProps & {\n  setCurrentStep: Dispatch<React.SetStateAction<number>>\n  steps: StepType[]\n  currentStep: number\n  disableDots?: boolean\n  nextButton?: (props: BtnFnProps) => void\n  prevButton?: (props: BtnFnProps) => void\n  setIsOpen: Dispatch<React.SetStateAction<Boolean>>\n  hideButtons?: boolean\n  hideDots?: boolean\n  disableAll?: boolean\n  rtl?: boolean\n}\n\nexport default Navigation\n\nconst Arrow: React.FC<BaseProps & {\n  inverted?: Boolean\n  disabled?: Boolean\n}> = ({ styles = {}, inverted = false, disabled }) => {\n  const getStyles = stylesMatcher(styles)\n  return (\n    <svg\n      viewBox=\"0 0 18.4 14.4\"\n      css={getStyles('arrow', { inverted, disabled })}\n    >\n      <path\n        d={\n          inverted\n            ? 'M17 7.2H1M10.8 1L17 7.2l-6.2 6.2'\n            : 'M1.4 7.2h16M7.6 1L1.4 7.2l6.2 6.2'\n        }\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeMiterlimit=\"10\"\n      />\n    </svg>\n  )\n}\n","import React, { Dispatch } from 'react'\n\nconst Content: React.FC<ContentProps> = ({\n  content,\n  setCurrentStep,\n  transition,\n  currentStep,\n  setIsOpen,\n}) => {\n  return typeof content === 'function'\n    ? content({ setCurrentStep, transition, currentStep, setIsOpen })\n    : content\n}\n\ntype ContentProps = {\n  content: any\n  setCurrentStep: Dispatch<React.SetStateAction<number>>\n  setIsOpen?: Dispatch<React.SetStateAction<Boolean>>\n  currentStep: number\n  transition?: boolean\n}\n\nexport default Content\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react'\nimport React from 'react'\nimport { StylesObj, stylesMatcher } from './styles'\n\nconst Close: React.FC<CloseProps> = ({\n  styles = {},\n  onClick,\n  disabled,\n  ...props\n}) => {\n  const getStyles = stylesMatcher(styles)\n  return (\n    <button\n      css={{ ...getStyles('button', {}), ...getStyles('close', { disabled }) }}\n      onClick={onClick}\n      {...props}\n    >\n      <svg viewBox=\"0 0 9.1 9.1\" aria-hidden role=\"presentation\">\n        <path\n          fill=\"currentColor\"\n          d=\"M5.9 4.5l2.8-2.8c.4-.4.4-1 0-1.4-.4-.4-1-.4-1.4 0L4.5 3.1 1.7.3C1.3-.1.7-.1.3.3c-.4.4-.4 1 0 1.4l2.8 2.8L.3 7.4c-.4.4-.4 1 0 1.4.2.2.4.3.7.3s.5-.1.7-.3L4.5 6l2.8 2.8c.3.2.5.3.8.3s.5-.1.7-.3c.4-.4.4-1 0-1.4L5.9 4.5z\"\n        />\n      </svg>\n    </button>\n  )\n}\n\ntype CloseProps = {\n  styles?: StylesObj\n  onClick?: () => void\n  disabled?: boolean\n}\n\nexport default Close\n","import React, { Dispatch, useEffect } from 'react'\nimport { KeyboardParts } from './types'\n\nconst Keyboard: React.FC<KeyboardProps> = ({\n  disableKeyboardNavigation,\n  setCurrentStep,\n  setIsOpen,\n  stepsLength,\n  disable,\n  rtl,\n}) => {\n  function keyDownHandler(e: any) {\n    e.stopPropagation()\n\n    if (disableKeyboardNavigation === true || disable) {\n      return\n    }\n    let isEscDisabled, isRightDisabled, isLeftDisabled\n    if (disableKeyboardNavigation) {\n      isEscDisabled = disableKeyboardNavigation.includes('esc')\n      isRightDisabled = disableKeyboardNavigation.includes('right')\n      isLeftDisabled = disableKeyboardNavigation.includes('left')\n    }\n    function next() {\n      setCurrentStep(c => Math.min(c + 1, stepsLength - 1))\n    }\n\n    function prev() {\n      setCurrentStep(c => Math.max(c - 1, 0))\n    }\n    if (e.keyCode === 27 && !isEscDisabled) {\n      e.preventDefault()\n      setIsOpen(false)\n    }\n    if (e.keyCode === 39 && !isRightDisabled) {\n      e.preventDefault()\n      if (rtl) {\n        prev()\n      } else {\n        next()\n      }\n    }\n    if (e.keyCode === 37 && !isLeftDisabled) {\n      e.preventDefault()\n      if (rtl) {\n        next()\n      } else {\n        prev()\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', keyDownHandler, false)\n    return () => {\n      window.removeEventListener('keydown', keyDownHandler)\n    }\n  }, [disable])\n\n  return null\n}\n\nexport type KeyboardProps = {\n  disableKeyboardNavigation?: boolean | KeyboardParts[]\n  setCurrentStep: Dispatch<React.SetStateAction<number>>\n  setIsOpen: Dispatch<React.SetStateAction<Boolean>>\n  stepsLength: number\n  disable?: boolean\n  rtl?: boolean\n}\n\nexport default Keyboard\n","import React, { useEffect } from 'react'\nimport { Portal, Observables } from '@reactour/utils'\nimport { Mask } from '@reactour/mask'\nimport { Popover } from '@reactour/popover'\nimport { FocusScope } from '@react-aria/focus'\nimport { useSizes } from './hooks'\nimport { TourProps, Padding } from './types'\nimport Badge from './Badge'\nimport Navigation from './Navigation'\nimport Content from './Content'\nimport Close from './Close'\nimport Keyboard from './Keyboard'\n\nconst Tour: React.FC<TourProps> = ({\n  currentStep,\n  setCurrentStep,\n  setIsOpen,\n  steps = [],\n  styles: globalStyles = {},\n  scrollSmooth,\n  afterOpen,\n  beforeClose,\n  padding = 10,\n  position,\n  onClickMask,\n  onClickHighlighted,\n  badgeContent,\n  className = 'reactour__popover',\n  maskClassName = 'reactour__mask',\n  highlightedMaskClassName,\n  disableInteraction,\n  disableFocusLock,\n  disableDotsNavigation,\n  disableKeyboardNavigation,\n  inViewThreshold,\n  nextButton,\n  prevButton,\n  showPrevNextButtons = true,\n  showCloseButton = true,\n  showNavigation = true,\n  showBadge = true,\n  disabledActions,\n  setDisabledActions,\n  rtl,\n  accessibilityOptions = {\n    closeButtonAriaLabel: 'Close Tour',\n    showNavigationScreenReaders: true,\n  },\n}) => {\n  const step = steps[currentStep]\n  const styles = step?.styles || globalStyles\n\n  const { sizes, transition, observableRefresher, target } = useSizes(step, {\n    block: 'center',\n    behavior: scrollSmooth ? 'smooth' : 'auto',\n    inViewThreshold,\n  })\n\n  useEffect(() => {\n    if (afterOpen && typeof afterOpen === 'function') {\n      afterOpen(target)\n    }\n    return () => {\n      if (beforeClose && typeof beforeClose === 'function') {\n        beforeClose(target)\n      }\n    }\n  }, [])\n\n  const { maskPadding, popoverPadding } = getPadding(step?.padding || padding)\n\n  function maskClickHandler() {\n    if (!disabledActions) {\n      if (onClickMask && typeof onClickMask === 'function') {\n        onClickMask({ setCurrentStep, setIsOpen, currentStep, steps })\n      } else {\n        setIsOpen(false)\n      }\n    }\n  }\n\n  const badge =\n    badgeContent && typeof badgeContent === 'function'\n      ? badgeContent({ currentStep, totalSteps: steps.length, transition })\n      : currentStep + 1\n\n  const doDisableInteraction = step?.stepInteraction\n    ? !step?.stepInteraction\n    : disableInteraction\n\n  useEffect(() => {\n    if (step?.action && typeof step?.action === 'function') {\n      step?.action(target)\n    }\n\n    if (step?.disableActions) {\n      setDisabledActions(true)\n    }\n  }, [step])\n\n  const popoverPosition = transition\n    ? 'center'\n    : step?.position\n    ? step?.position\n    : position\n\n  return step ? (\n    <Portal>\n      <FocusManager disabled={disableFocusLock}>\n        <Observables\n          mutationObservables={step?.mutationObservables}\n          resizeObservables={step?.resizeObservables}\n          refresh={observableRefresher}\n        />\n\n        <Keyboard\n          setCurrentStep={setCurrentStep}\n          setIsOpen={setIsOpen}\n          stepsLength={steps.length}\n          disableKeyboardNavigation={disableKeyboardNavigation}\n          disable={disabledActions}\n          rtl={rtl}\n        />\n\n        <Mask\n          sizes={sizes}\n          onClick={maskClickHandler}\n          styles={{\n            highlightedArea: base => ({\n              ...base,\n              display: doDisableInteraction ? 'block' : 'none',\n            }),\n            ...styles,\n          }}\n          padding={maskPadding}\n          highlightedAreaClassName={highlightedMaskClassName}\n          className={maskClassName}\n          onClickHighlighted={onClickHighlighted}\n        />\n\n        <Popover\n          sizes={sizes}\n          styles={styles}\n          position={popoverPosition}\n          padding={popoverPadding}\n          aria-labelledby={accessibilityOptions?.ariaLabelledBy}\n          className={className}\n        >\n          {showBadge ? <Badge styles={styles}>{badge}</Badge> : null}\n          {showCloseButton ? (\n            <Close\n              styles={styles}\n              aria-label={accessibilityOptions?.closeButtonAriaLabel}\n              disabled={disabledActions}\n              onClick={() => {\n                if (!disabledActions) setIsOpen(false)\n              }}\n            />\n          ) : null}\n          <Content\n            content={step?.content}\n            setCurrentStep={setCurrentStep}\n            currentStep={currentStep}\n            transition={transition}\n            setIsOpen={setIsOpen}\n          />\n          {showNavigation ? (\n            <Navigation\n              setCurrentStep={setCurrentStep}\n              currentStep={currentStep}\n              setIsOpen={setIsOpen}\n              steps={steps}\n              styles={styles}\n              aria-hidden={!accessibilityOptions?.showNavigationScreenReaders}\n              nextButton={nextButton}\n              prevButton={prevButton}\n              disableDots={disableDotsNavigation}\n              hideButtons={!showPrevNextButtons}\n              disableAll={disabledActions}\n              rtl={rtl}\n            />\n          ) : null}\n        </Popover>\n      </FocusManager>\n    </Portal>\n  ) : null\n}\n\nexport default Tour\n\nexport interface CustomCSS extends React.CSSProperties {\n  rx: number\n}\n\nconst FocusManager: React.FC<FocusProps> = ({ disabled, children }) => {\n  return disabled ? (\n    <>{children}</>\n  ) : (\n    <FocusScope contain autoFocus restoreFocus>\n      {children}\n    </FocusScope>\n  )\n}\n\ntype FocusProps = {\n  disabled?: boolean\n}\n\nfunction getPadding(padding?: Padding) {\n  if (typeof padding === 'object' && padding !== null) {\n    return {\n      maskPadding: padding.mask,\n      popoverPadding: padding.popover,\n    }\n  }\n  return {\n    maskPadding: padding,\n    popoverPadding: padding,\n  }\n}\n","import React, { useEffect, useContext } from 'react'\nimport { useState } from 'react'\nimport Tour from './Tour'\nimport { ProviderProps, TourProps } from './types'\nimport usePrevious from './usePrevious'\n\nconst defaultState = {\n  isOpen: false,\n  setIsOpen: () => false,\n  currentStep: 0,\n  setCurrentStep: () => 0,\n  steps: [],\n  setSteps: () => [],\n  disabledActions: false,\n  setDisabledActions: () => false,\n}\n\nconst TourContext = React.createContext<TourProps>(defaultState)\n\nconst TourProvider: React.FC<ProviderProps> = ({\n  children,\n  defaultOpen = false,\n  startAt = 0,\n  steps: defaultSteps,\n  onClose,\n  ...props\n}) => {\n  const [isOpen, setIsOpen] = useState(defaultOpen)\n  const [currentStep, setCurrentStep] = useState(startAt)\n  const [steps, setSteps] = useState(defaultSteps)\n  const [disabledActions, setDisabledActions] = useState(false)\n\n  const value = {\n    isOpen,\n    setIsOpen,\n    currentStep,\n    setCurrentStep,\n    steps,\n    setSteps,\n    disabledActions,\n    setDisabledActions,\n    ...props,\n  }\n\n  const previousIsOpen = usePrevious(isOpen)\n\n  useEffect(() => {\n    const hasClosedTour = previousIsOpen === true && isOpen === false\n\n    if (hasClosedTour && onClose && typeof onClose === 'function') {\n      onClose({ currentStep, steps })\n    }\n  }, [isOpen, previousIsOpen])\n\n  return (\n    <TourContext.Provider value={value}>\n      {children}\n      {isOpen ? <Tour {...value} /> : null}\n    </TourContext.Provider>\n  )\n}\n\nexport { TourProvider }\n\nexport default TourContext\n\nexport function useTour() {\n  return useContext(TourContext)\n}\n","import { useEffect, useRef } from 'react'\n\nfunction usePrevious(value: any) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n\nexport default usePrevious\n","import React from 'react'\nimport { useTour } from './Context'\n\nexport default function withTour<P>(WrappedComponent: React.ComponentType<P>) {\n  const ComponentWithTour = (props: P) => {\n    const tourProps = useTour()\n    return <WrappedComponent {...props} {...tourProps} />\n  }\n  return ComponentWithTour\n}\n"],"names":["initialState","bottom","height","left","right","top","width","windowWidth","windowHeight","getHighlightedRect","node","highlightedSelectors","bypassElem","getWindow","w","h","getRect","attrs","altAttrs","element","document","querySelector","style","display","visibility","rect","bypassable","defaultStyles","badge","position","fontFamily","background","lineHeight","paddingLeft","paddingRight","fontSize","borderRadius","color","textAlign","boxShadow","controls","marginTop","alignItems","justifyContent","navigation","counterReset","flexWrap","button","padding","border","cursor","disabled","arrow","flex","dot","current","counterIncrement","margin","transition","transform","content","opacity","showNumber","backgroundColor","close","stylesMatcher","styles","key","state","base","custom","Badge","children","getStyles","jsx","css","Navigation","steps","setCurrentStep","currentStep","setIsOpen","nextButton","prevButton","disableDots","hideButtons","disableAll","rtl","stepsLength","length","Button","onClick","kind","hideArrow","Math","min","max","Arrow","inverted","dir","Array","from","_","i","map","index","navDotAriaLabel","viewBox","d","fill","stroke","strokeWidth","strokeLinecap","strokeMiterlimit","Content","Close","props","role","Keyboard","disableKeyboardNavigation","disable","keyDownHandler","e","isEscDisabled","isRightDisabled","isLeftDisabled","next","c","prev","stopPropagation","includes","keyCode","preventDefault","useEffect","window","addEventListener","removeEventListener","Tour","afterOpen","beforeClose","onClickMask","onClickHighlighted","badgeContent","className","maskClassName","highlightedMaskClassName","disableInteraction","disableFocusLock","disableDotsNavigation","showPrevNextButtons","showCloseButton","showNavigation","showBadge","disabledActions","setDisabledActions","accessibilityOptions","closeButtonAriaLabel","showNavigationScreenReaders","step","scrollOptions","block","behavior","inViewThreshold","useState","setTransition","observing","setObserving","refresher","setRefresher","dimensions","setdDimensions","target","selector","handleResize","useCallback","inView","threshold","smoothScroll","then","Date","now","sizes","observableRefresher","useSizes","scrollSmooth","maskPadding","mask","popoverPadding","popover","getPadding","totalSteps","doDisableInteraction","stepInteraction","action","disableActions","popoverPosition","React","Portal","FocusManager","Observables","mutationObservables","resizeObservables","refresh","Mask","highlightedArea","highlightedAreaClassName","Popover","ariaLabelledBy","FocusScope","contain","autoFocus","restoreFocus","TourContext","createContext","isOpen","setSteps","useTour","useContext","defaultOpen","startAt","defaultSteps","onClose","value","previousIsOpen","ref","useRef","usePrevious","Provider","WrappedComponent","tourProps"],"mappings":"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"}